% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goodness_of_fit.R
\name{wSSE_GOF}
\alias{wSSE_GOF}
\title{A function to estimate weighted sum of squared errors (WSSE)
goodness-of-fit}
\usage{
wSSE_GOF(
  .samples,
  .func,
  .args = list(NULL),
  .weighted = TRUE,
  .l_targets,
  .maximise = TRUE,
  .optim = FALSE,
  ...
)
}
\arguments{
\item{.samples}{A table or vector of sampled parameter values}

\item{.func}{A function defining the model to be calibrated}

\item{.args}{A list of arguments to be passed to .func}

\item{.weighted}{Logical for whether the SSR was to be weighted, default
is \code{TRUE}. The weight used by function is \code{1/(sd^2)}.}

\item{.l_targets}{A list containing a vector of targets' names, a vector
of targets' weights and a table for each target that contains the values
(column name 'value') and standard errors (column name 'sd') of the
corresponding target.}

\item{.maximise}{Logical for whether the output of the function is used
in a maximising optimisation function. Default is \code{TRUE}.}

\item{.optim}{Logical for whether the function is used by an
optimisation algorithm. Default is \code{FALSE}.}

\item{...}{Extra arguments, e.g. seed number and vector of calibrated
parameters' names or .sample_method (for labelling purposes).}
}
\value{
A table with proposed parameter sets and their corresponding
summed overall weighted sum of square values sorted in descending order.
}
\description{
A function to estimate weighted sum of squared errors (WSSE)
goodness-of-fit
}
\examples{
library(calibrater)
data("CRS_targets")
Surv <- CRS_targets$Surv
v_targets_names <- c("Surv")
v_targets_dists <- c('norm')
v_targets_weights <- c(1)
l_targets <- list('v_targets_names' = v_targets_names, 'Surv' = Surv,
                  'v_targets_dists' = v_targets_dists,
                  'v_targets_weights' = v_targets_weights)

v_params_names <- c("p_Mets", "p_DieMets")
v_params_dists <- c("unif", "unif")
args <- list(list(min = 0.04, max = 0.16),
             list(min = 0.04, max = 0.12))
l_params <- list(v_params_names = v_params_names,
                 v_params_dists = v_params_dists,
                 args = args)

samples <- sample_prior_LHS(.l_params = l_params,
                            .n_samples = 10)

GOF_wsse <- wSSE_GOF(.func = CRS_markov, .samples = samples,
                     .l_targets = l_targets)

}
