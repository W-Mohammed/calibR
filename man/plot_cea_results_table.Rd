% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ce_summary_objects.R
\name{plot_cea_results_table}
\alias{plot_cea_results_table}
\title{Draw Cost Effectiveness Results Table}
\usage{
plot_cea_results_table(
  .df_effects_,
  .df_costs_,
  .interventions_labels_,
  .df_outcomes_ = NULL,
  .label_effects_ = "QALYs",
  .label_costs_ = "Costs",
  .wtp_key_values_ = c(20000, 30000),
  .highlight_optimal_choices_ = TRUE,
  .show_nmb_ = TRUE,
  .show_pce_ = TRUE,
  .show_evpi_ = TRUE,
  .show_dominance_ = TRUE,
  .format_values_ = TRUE,
  .currency_symbol_ = "Â£",
  .output_type_ = "dataframe",
  .output_format_ = "wide",
  .output_title_ = NULL,
  .output_subtitle_ = NULL,
  .show_diag_ = FALSE
)
}
\arguments{
\item{.df_effects_}{Dataframe or tibble containing the effects values from PSA.
The number of columns should equate to the number of interventions names
passed to \code{.interventions_labels_} while the number of rows should equate the
number of PSA simulations to be summarised. Also, the names of the columns in
\code{.df_effects_} should be identical to and appear in the same order to those of
the interventions' names in \code{.interventions_labels_}.}

\item{.df_costs_}{Dataframe or tibble containing the costs values from PSA.
The dimensions (rows and columns) and column names of \code{.df_costs_} should be
identical to those of \code{.df_effects_}.}

\item{.interventions_labels_}{Named Character vector containing the names of
all interventions. The names (of the elements (the labels) in the named
vector) should be identical to and in the same order of the column names in
the dataframes passed to the \code{.df_effects_} and \code{.df_costs_} arguments.}

\item{.df_outcomes_}{Dataframe or tibble containing average costs and effects
data.}

\item{.label_effects_}{Character indicating the name of the column containing
the mean values of the effects. Default is \code{"QALYs"}.}

\item{.label_costs_}{Character indicating the name of the column containing
the mean values of the costs. Default is \code{"Costs"}.}

\item{.wtp_key_values_}{Numeric vector specifying the willingness-to-pay (WTP)
values to be used in estimating the NMB and probability of the optimal choice
being cost-effective. This argument takes effect if \code{.show_nmb_} is \code{TRUE},
and accepts a maximum of two values. Default is \code{c(20000, 30000)}.}

\item{.highlight_optimal_choices_}{Logical for whether to report NMB, PCE or
EVPI for the optimal choice. Default is \code{TRUE}. If \code{FALSE}, the values of
NMB, PCE or EVPI (if any was requested by setting \code{.show_nmb_}, \code{.show_pce_}
or \code{.show_evpi_} to \code{TRUE}) will be reported for all options.}

\item{.show_nmb_}{Logical for whether to show the expected Net Monetary
Benefits (NMB) in the returned table. Requires \code{.wtp_key_values_} not to be
\code{NULL}.}

\item{.show_pce_}{Logical for whether to show the
probability-of-being-cost-effective in the returned table. Requires
\code{.wtp_key_values_} not to be \code{NULL}.}

\item{.show_evpi_}{Logical for whether to show individual Expected Value of
Perfect Information (EVPI) in the returned table. Requires \code{.wtp_key_values_}
not to be \code{NULL}.}

\item{.show_dominance_}{Logical for whether to show dominance information in
the returned table.}

\item{.format_values_}{Logical for whether to return a formatted table.
Default is \code{TRUE}.}

\item{.currency_symbol_}{Character scalar representing the Hex code of the
currency symbol to use in labeling relevant results. Default is \code{"\\u00A3"}
for Sterling (GBP). Use \code{"\\u20AC"}for Euros or \code{"\\u0024"} for US Dollars.}

\item{.output_type_}{Character scalar that takes one of three options:
\code{"html"}, \code{"latex"} or \code{"dataframe"}. Default is \code{"dataframe"}. If \code{"html"}
or \code{"latex"} were passed to this argument, the function calls
\link{generate_gt_table} internally to generate the required output. The
\code{"html"} is suitable for shiny application; whereas, \code{"latex"}is suitable for
PDF document.}

\item{.output_format_}{Character scalar taking one of two options: \code{"wide"}
or \code{"long"} specifying whether the generated results table would be in a wide
or long format, respectively.}

\item{.output_title_}{Character scalar specifying the title of the generated
table Ignored if \code{.output_type_} is the default \code{"dataframe"}.}

\item{.output_subtitle_}{Character scalar specifying the subtitle of the
generated table. Ignored if \code{.output_type_} is the default \code{"dataframe"}.}

\item{.show_diag_}{Logical for whether to keep calculations diagnostics
column.}
}
\value{
A object of class gt_tbl or a dataframe of class "icer_tbl"
containing intervention names, outcomes (costs and effects) mean values,
outcomes differential values, Incremental Cost Effectiveness Ratios (ICER)s
for qualified comparators and information about which interventions were
extendedly dominated (if requested by the user). Upon request, and with the
necessary inputs, the returned table could include the NMB and probability of
an intervention being cost-effective at user-defined WTP values.
}
\description{
This function employs the \link{identify_all_dominance},
\link{calculate_icers} and \link{identify_all_e_dominance} functions to
draw a cost-effectiveness results table. This function allows users to either
pass a table of the mean values of the outcomes (costs and effects), or the
Probabilistic Sensitivity Analysis (PSA) costs and effects data. The latter
gives the user the option to add the probability-of-being-cost-effective and
the Net Monetary Benefits (NMB) to the returned table. Therefore, in addition
to the other arguments this function strictly accepts either the set
of \code{.df_effects_}, \code{.df_costs_}, and \code{.interventions_labels_} or \code{.df_outcomes_}.
The function will ignore \code{.df_outcomes_} if all four arguments were passed.
}
\examples{
\dontrun{
df_outcomes <- data.frame(
  'Intervention' = ShinyPSA::Hyperphosphatemia_PSA$treat,
  'QALYs' = colMeans(ShinyPSA::Hyperphosphatemia_PSA$e),
  'Costs' = colMeans(ShinyPSA::Hyperphosphatemia_PSA$c)
)
cea_results_table1.1 <- plot_cea_results_table(
  .df_effects_ = NULL,
  .df_costs_ = NULL,
  .interventions_labels_ = NULL,
  .df_outcomes_ = df_outcomes,
  .format_values_ = TRUE,
  .show_diag_ = FALSE,
  .output_format_ = "wide"
)
cea_results_table1.2 <- plot_cea_results_table(
  .df_effects_ = NULL,
  .df_costs_ = NULL,
  .interventions_labels_ = NULL,
  .df_outcomes_ = df_outcomes,
  .format_values_ = TRUE,
  .output_type_ = "html",
  .output_title_ = "Cost-Effectiveness Results",
  .output_subtitle_ = "Table shows cost-effectiveness analysis results",
  .show_diag_ = FALSE
)
cea_results_table2 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = NULL,
  .show_nmb_ = FALSE,
  .show_pce_ = FALSE,
  .show_evpi_ = FALSE,
  .format_values_ = TRUE,
  .show_diag_ = FALSE
)
identical(cea_results_table1.1, cea_results_table2)
cea_results_table3 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .format_values_ = TRUE,
  .show_diag_ = FALSE
)
cea_results_table4 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .show_dominance_ = FALSE,
  .format_values_ = FALSE,
  .show_diag_ = FALSE
)
cea_results_table5 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = TRUE,
  .show_pce_ = FALSE,
  .show_evpi_ = FALSE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .show_diag_ = FALSE
)
cea_results_table6 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = FALSE,
  .show_pce_ = TRUE,
  .show_evpi_ = FALSE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .show_diag_ = FALSE
)
cea_results_table7.1 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = FALSE,
  .show_pce_ = TRUE,
  .show_evpi_ = FALSE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .output_type_ = "html",
  .show_diag_ = FALSE
)
cea_results_table7.2 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = TRUE,
  .show_pce_ = FALSE,
  .show_evpi_ = FALSE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .output_type_ = "html",
  .show_diag_ = FALSE
)
cea_results_table7.3 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = TRUE,
  .show_pce_ = TRUE,
  .show_evpi_ = TRUE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .output_type_ = "html",
  .show_diag_ = FALSE
)
cea_results_table7.4 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = FALSE,
  .show_pce_ = FALSE,
  .show_evpi_ = FALSE,
  .format_values_ = TRUE,
  .output_type_ = "html",
  .show_diag_ = FALSE
)
cea_results_table7.5 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = FALSE,
  .show_pce_ = FALSE,
  .show_evpi_ = TRUE,
  .format_values_ = TRUE,
  .output_type_ = "html",
  .show_diag_ = FALSE
)
cea_results_table7.6 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = TRUE,
  .show_pce_ = TRUE,
  .show_evpi_ = TRUE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .output_type_ = "html",
  .output_format_ = "long",
  .show_diag_ = FALSE
)
cea_results_table8 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(20000, 30000),
  .show_nmb_ = FALSE,
  .show_pce_ = FALSE,
  .show_evpi_ = FALSE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .output_type_ = "latex",
  .show_diag_ = FALSE
)
cea_results_table9 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
  .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
  .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = NULL,
  .show_nmb_ = FALSE,
  .show_pce_ = FALSE,
  .show_evpi_ = FALSE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .output_type_ = "html",
  .show_diag_ = FALSE
)
cea_results_table10 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hypothetical_PSA$e,
  .df_costs_ = ShinyPSA::Hypothetical_PSA$c,
  .interventions_labels_ = ShinyPSA::Hypothetical_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hypothetical_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(12980, 20000),
  .show_nmb_ = TRUE,
  .show_pce_ = TRUE,
  .show_evpi_ = TRUE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .output_type_ = "html",
  .output_format_ = "long",
  .show_diag_ = FALSE
)
cea_results_table11 <- plot_cea_results_table(
  .df_effects_ = ShinyPSA::Hypothetical_PSA$e,
  .df_costs_ = ShinyPSA::Hypothetical_PSA$c,
  .interventions_labels_ = ShinyPSA::Hypothetical_PSA$treat \%>\%
                          `names<-`(colnames(ShinyPSA::Hypothetical_PSA$e)),
  .df_outcomes_ = NULL,
  .wtp_key_values_ = c(12980, 20000),
  .show_nmb_ = TRUE,
  .show_pce_ = TRUE,
  .show_evpi_ = TRUE,
  .format_values_ = TRUE,
  .currency_symbol_ = "\u00A3",
  .output_type_ = "dataframe",
  .output_format_ = "long",
  .show_diag_ = FALSE
)
}
}
