% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ce_summary_objects.R
\name{generate_gt_table}
\alias{generate_gt_table}
\title{Generate HTML or Latex table}
\usage{
generate_gt_table(
  .df_cea_results_,
  .label_effects_,
  .label_costs_,
  .wtp_key_values_,
  .currency_symbol_,
  .output_type_,
  .output_format_,
  .output_title_ = NULL,
  .output_subtitle_ = NULL,
  .output_contents_ = "all",
  .output_grouped_ = FALSE,
  .output_group_ = NULL
)
}
\arguments{
\item{.df_cea_results_}{Object of class "icer_tbl" returned by
\link{plot_cea_results_table}.}

\item{.label_effects_}{Character indicating the name of the column containing
the mean values of the effects. Default is \code{"QALYs"}.}

\item{.label_costs_}{Character indicating the name of the column containing
the mean values of the costs. Default is \code{"Costs"}.}

\item{.wtp_key_values_}{Numeric vector specifying the willingness-to-pay (WTP)
values to be used in estimating the NMB and probability of the optimal choice
being cost-effective. This argument takes effect if \code{.show_nmb_} is \code{TRUE},
and accepts a maximum of two values. Default is \code{c(20000, 30000)}.}

\item{.currency_symbol_}{Character scalar representing the Hex code of the
currency symbol to use in labeling relevant results. Default is \code{"\\u00A3"}
for Sterling (GBP). Use \code{"\\u20AC"}for Euros or \code{"\\u0024"} for US Dollars.}

\item{.output_type_}{Character scalar that takes one of three options:
\code{"html"}, \code{"latex"} or \code{"dataframe"}. Default is \code{"dataframe"}. If \code{"html"}
or \code{"latex"} were passed to this argument, the function calls
\link{generate_gt_table} internally to generate the required output. The
\code{"html"} is suitable for shiny application; whereas, \code{"latex"}is suitable for
PDF document.}

\item{.output_format_}{Character scalar taking one of two options: \code{"wide"}
or \code{"long"} specifying whether the generated results table would be in a wide
or long format, respectively.}

\item{.output_title_}{Character scalar specifying the title of the generated
table Ignored if \code{.output_type_} is the default \code{"dataframe"}.}

\item{.output_subtitle_}{Character scalar specifying the subtitle of the
generated table. Ignored if \code{.output_type_} is the default \code{"dataframe"}.}

\item{.output_contents_}{Character vector specifying the contents of the
generated Cost-Effectiveness Results table. The default is \code{"all"} which
returns the average values of the outcomes, incremental analysis values,
Net Monetary Benefit (NMB), Probability of Cost-Effectiveness (PCE),
and Expected Value of Perfect Information (EVPI). This argument accepts any
of the arguments\code{c("means", "incremental", "NMB", "PCE", "EVPI")}.}

\item{.output_grouped_}{Logical scalar for whether to make row groups as
columns. Default is \code{FALSE}.}

\item{.output_group_}{Character scalar specifying the name of the column on
which the generated output is grouped. Default is \code{NULL} where only the
original row groups are converted to a column. This argument is ignored if
\code{.output_grouped_} is \code{FALSE}.}
}
\value{
Object of class "gt_tbl"
}
\description{
This function creates a publication ready version of the
data.frame created by the \link{plot_cea_results_table} function.
}
\examples{
\dontrun{
df_cea_results_wide <- plot_cea_results_table(
   .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
   .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
   .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                         `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
   .df_outcomes_ = NULL,
   .wtp_key_values_ = 20000,
   .show_nmb_ = TRUE,
   .show_pce_ = TRUE,
   .show_evpi_ = TRUE,
   .format_values_ = TRUE,
   .currency_symbol_ = "\u00A3",
   .show_diag_ = FALSE,
   .output_format_ = "wide"
)
gt_cea_results_wide <- generate_gt_table(
   .df_cea_results_ = df_cea_results_wide,
   .label_effects_ = "QALYs",
   .label_costs_ = "Costs",
   .wtp_key_values_ = 20000,
   .currency_symbol_ = "\u00A3",
   .output_type_ = "html",
   .output_format_ = "wide"
)
df_cea_results_long <- plot_cea_results_table(
   .df_effects_ = ShinyPSA::Hyperphosphatemia_PSA$e,
   .df_costs_ = ShinyPSA::Hyperphosphatemia_PSA$c,
   .interventions_labels_ = ShinyPSA::Hyperphosphatemia_PSA$treat \%>\%
                         `names<-`(colnames(ShinyPSA::Hyperphosphatemia_PSA$e)),
   .df_outcomes_ = NULL,
   .wtp_key_values_ = 20000,
   .show_nmb_ = TRUE,
   .show_pce_ = TRUE,
   .show_evpi_ = TRUE,
   .format_values_ = TRUE,
   .currency_symbol_ = "\u00A3",
   .show_diag_ = FALSE,
   .output_format_ = "long"
)
gt_cea_results_long1 <- generate_gt_table(
   .df_cea_results_ = df_cea_results_long,
   .label_effects_ = "QALYs",
   .label_costs_ = "Costs",
   .wtp_key_values_ = 20000,
   .currency_symbol_ = "\u00A3",
   .output_type_ = "html",
   .output_format_ = "long",
   .output_grouped_ = FALSE,
   .output_group_ = NULL
)
gt_cea_results_long2 <- generate_gt_table(
   .df_cea_results_ = df_cea_results_long,
   .label_effects_ = "QALYs",
   .label_costs_ = "Costs",
   .wtp_key_values_ = 20000,
   .currency_symbol_ = "\u00A3",
   .output_type_ = "html",
   .output_format_ = "long",
   .output_grouped_ = TRUE,
   .output_group_ = NULL
)
}
}
